{"version":3,"sources":["Components/Header.jsx","Components/Footer.jsx","Pages/Headlines/HeadlineDisplay.jsx","Generic/CardLink.jsx","Pages/Headlines/Headlines.jsx","Common/menuOptions.jsx","Pages/CV/CV.jsx","Components/NavTop.jsx","helper.js","Components/NavBottom.jsx","Pages/Pages.jsx","Content.jsx","Theme.js","App.js","index.js"],"names":["profileLinks","IconButton","aria-label","href","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","height","appBar","zIndex","drawer","Header","props","classes","useState","linksMenu","setLinksMenu","showThemeToggle","setShowThemeToggle","history","useHistory","setDarkmode","darkMode","AppBar","position","className","Toolbar","onMouseOver","onMouseOut","Hidden","smDown","onClick","toggleDraw","Button","uri","push","Typography","variant","Fade","in","FormControlLabel","value","control","Switch","color","size","onChange","event","checked","label","labelPlacement","xsDown","smUp","currentTarget","endIcon","Menu","anchorEl","open","Boolean","onClose","footer","top","bottom","alignItems","selectArea","heigh","width","Footer","mdUp","ButtonBase","Grid","container","xs","item","image","opacity","textArea","left","paddingTop","paddingLeft","paddingRight","display","overflow","breakpoints","down","fontSize","body","getHeadlineDisplayData","setState","a","fetch","then","res","json","list","catch","err","items","hasLoaded","HeadlineDisplay","redirectTo","state","map","index","CardMedia","bgImage","CardActionArea","link","lg","desc","animation","card","flexDirection","justifyContent","cardMedia","cardContent","flexGrow","cardAction","padding","readButton","borderRadius","shape","CardLink","largeItem","path","clicked","sm","md","xl","Card","imgSrc","CardContent","gutterBottom","component","preview","CardActions","fullWidth","content","divider","marginTop","marginBottom","getFrontPageData","stateSetter","data","e","console","log","pageData","menuOptions","text","code","pageState","setPageState","length","record","iter","key","justify","CircularProgress","Divider","optionsBody","drawerContainer","dropDown","borderBottom","NavTop","changeTab","selectedTab","tabs","opt","Tab","openFlag","anchor","Drawer","paper","Tabs","optionsFlexContainer","option","maxWidth","darkModeButton","margin","NavBottom","orientation","flexContainerVertical","Pages","options","sort","firstElem","secondElem","routes","minHeight","mixins","toolbar","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","up","Content","useTheme","isSM","window","innerWidth","values","drawOpen","drawerShift","indexToTabName","setSelectedTab","_event","tabNo","location","pathname","substring","tabName","startsWith","tabNameToIndex","minWidth0Landscape","useMediaQuery","minWidth600","toolBarHeight","clsx","style","getTheme","mode","matchMedia","matches","createMuiTheme","palette","type","primary","blueGrey","secondary","teal","App","defaultDarkMode","themeData","setThemeData","onOff","changeDraw","ThemeProvider","CssBaseline","Main","exact","from","to","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f7393999.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    makeStyles,\r\n    IconButton,\r\n    Button, \r\n    Hidden, \r\n    Menu, \r\n    FormControlLabel,\r\n    Switch, \r\n    Fade, \r\n} from '@material-ui/core';\r\n\r\nimport { useHistory } from 'react-router';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nconst profileLinks = (\r\n    <div>\r\n        <IconButton aria-label=\"GitHub\" href=\"https://github.com/jasonalexander-ja\">\r\n            <GitHubIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Twitter\" href=\"https://twitter.com/crashtestdev\">\r\n            <TwitterIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"YouTube\" href=\"https://www.youtube.com/channel/UCrIlmyMGXPzWLyukoxQWYlA\">\r\n            <YouTubeIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Telegram\" href=\"https://t.me/crashtestdev\">\r\n            <TelegramIcon />\r\n        </IconButton>\r\n    </div>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginRight: 'auto',\r\n        height: '100%',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1, \r\n    },\r\n})); \r\n\r\nconst Header = props => {\r\n    const classes = useStyles();\r\n    const [linksMenu, setLinksMenu] = useState(null);\r\n    const [showThemeToggle, setShowThemeToggle] = useState(false);\r\n    const history = useHistory();\r\n    const redirectTo = uri => history.push(`/${uri}`);\r\n\r\n    const {\r\n        setDarkmode, \r\n        darkMode\r\n    } = props;\r\n\r\n    const openLinks = (event) => \r\n        setLinksMenu(event.currentTarget);\r\n\r\n    const closeLinks = () => \r\n        setLinksMenu(null);\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" className={classes.appBar}>\r\n            <Toolbar\r\n                onMouseOver={() => setShowThemeToggle(true)}\r\n                onMouseOut={() => setShowThemeToggle(false)}\r\n            >\r\n                <Hidden smDown>\r\n                    <IconButton \r\n                        className={classes.menuButton}\r\n                        onClick={() => props.toggleDraw('top')}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                </Hidden>\r\n                <Button \r\n                    className={classes.title}\r\n                    onClick={() => redirectTo('home')}\r\n                >\r\n                    <Typography variant=\"h6\">\r\n                        JSON's Node \r\n                    </Typography>\r\n                </Button>\r\n                <Hidden smDown>\r\n                    <Fade in={showThemeToggle}>\r\n                        <FormControlLabel\r\n                            value={darkMode}\r\n                            control={\r\n                                <Switch \r\n                                    color=\"secondary\" \r\n                                    size=\"small\" \r\n                                    onChange={event => setDarkmode(!darkMode)}\r\n                                    checked={darkMode}\r\n                                />\r\n                            }\r\n                            label=\"Dark Mode\"\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                    </Fade>\r\n                </Hidden>\r\n                <Hidden xsDown>\r\n                    {profileLinks}\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                    <Button \r\n                        onClick={openLinks}\r\n                        endIcon={<KeyboardArrowDownIcon />}\r\n                    >\r\n                        Links \r\n                    </Button>\r\n                    <Menu\r\n                        anchorEl={linksMenu}\r\n                        open={Boolean(linksMenu)}\r\n                        onClose={closeLinks}\r\n                    >\r\n                        {profileLinks}\r\n                    </Menu>\r\n                </Hidden>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport {\r\n    makeStyles, \r\n    AppBar,\r\n    Toolbar,\r\n    Hidden,\r\n    ButtonBase, \r\n    Grid, \r\n} from '@material-ui/core';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    footer: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n    }, \r\n    selectArea: {\r\n        heigh: \"100%\",\r\n        width: \"100%\"\r\n    }, \r\n}));\r\n\r\nconst Footer = props => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Hidden mdUp>\r\n            <AppBar position=\"sticky\" className={classes.footer}>\r\n                <ButtonBase \r\n                    className={classes.selectArea} \r\n                    onClick={() => props.toggleDraw('bottom')}\r\n                >\r\n                    <Toolbar>\r\n                    <Grid container>\r\n                        <Grid xs={12} item></Grid>\r\n                        <Grid xs={12} item><MenuIcon /></Grid>\r\n                        <Grid xs={12} item></Grid>\r\n                    </Grid>\r\n                    </Toolbar>\r\n                </ButtonBase>\r\n            </AppBar>\r\n        </Hidden>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\n\r\nimport {\r\n    CardMedia, \r\n    Grid,\r\n    Typography, \r\n    CardActionArea\r\n} from '@material-ui/core';\r\nimport {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nimport Carousel from 'react-material-ui-carousel'; \r\n\r\nimport {\r\n    dev\r\n} from '../../helper.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    image: {\r\n        width: '100%', \r\n        height: '40vh', \r\n        opacity: 0.3, \r\n    },\r\n    textArea: { \r\n        position: 'absolute', \r\n        width: '100%',\r\n        height: '40vh',\r\n        top: 0, \r\n        left: 0, \r\n        paddingTop: '15px',\r\n        paddingLeft: '15px',\r\n        paddingRight: '15px', \r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        overflow: 'hidden'\r\n    },\r\n    title: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '30px', \r\n        }\r\n    },\r\n    body: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '20px', \r\n        }\r\n    }\r\n}));\r\n\r\nconst getHeadlineDisplayData = async (setState) => {\r\n    const items = await fetch(`/${dev ? 'TestData/' : ''}HeadlineDisplay.json`)\r\n        .then(res => res.json())\r\n        .then(json => json.list ? json.list : [])\r\n        .catch(err => []);\r\n    setState({\r\n        items: items, \r\n        hasLoaded: true, \r\n    });\r\n}\r\n\r\nconst HeadlineDisplay = props => {\r\n    const { redirectTo } = props;\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({ items: [], hasLoaded: false });\r\n    if(!state.hasLoaded)\r\n        getHeadlineDisplayData(setState);\r\n\r\n    const items = state.items.map((item, index) => \r\n        <div \r\n            key={`${item.bgImage}-${index}`}\r\n        >\r\n            <CardMedia \r\n                className={classes.image} \r\n                image={item.bgImage} \r\n            >\r\n            </CardMedia>\r\n            <CardActionArea \r\n                className={classes.textArea}\r\n                onClick={() => redirectTo(`post/${item.link}`)}\r\n            >\r\n                    <Grid container>\r\n                        <Grid item lg={1} xs={false} />\r\n                        <Grid item lg={10} xs={12}>\r\n                            <Typography className={classes.title} variant=\"h2\">\r\n                                {item.title}\r\n                            </Typography>\r\n                            <Typography className={classes.body} variant=\"h5\">\r\n                                {item.desc}\r\n                            </Typography>\r\n                            <Typography className={classes.body} variant=\"h5\" color=\"secondary\">\r\n                                Learn More\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={1} xs={false} />\r\n                    </Grid>\r\n            </CardActionArea>\r\n        </div>\r\n    );\r\n    \r\n    return (\r\n        <Grid item lg={10} xs={12}>\r\n            <Carousel animation=\"slide\">\r\n                {items}\r\n            </Carousel>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default HeadlineDisplay;\r\n","import React, { Button, CardActions } from '@material-ui/core';\r\n\r\nimport {\r\n    Card, \r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Grid, \r\n    makeStyles, \r\n    CardActionArea, \r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', \r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    cardAction: {\r\n        padding: '0', \r\n    },\r\n    readButton: {\r\n        borderRadius: `0px 0px ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px`\r\n    },\r\n}));\r\n\r\nconst CardLink = (props) => {\r\n    const classes = useStyles();\r\n    const { largeItem, redirectTo, path } = props;\r\n    const clicked = () => redirectTo(`post/${path}`);\r\n\r\n    return (\r\n        <Grid \r\n            item xs={12} \r\n            sm={6} \r\n            md={largeItem ? 8 : 4} \r\n            lg={largeItem ? 6 : 3} \r\n            xl={largeItem ? 4 : 2}\r\n        >\r\n            <Card className={classes.card}>\r\n                <CardActionArea>\r\n                    <CardMedia \r\n                        className={classes.cardMedia}\r\n                        image={props.imgSrc}\r\n                        title={props.title}\r\n                        onClick={clicked}\r\n                    />\r\n                </CardActionArea>\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography \r\n                        gutterBottom \r\n                        variant=\"h5\" \r\n                        component=\"h2\"\r\n                    >\r\n                        {props.title}\r\n                    </Typography>\r\n                    <Typography \r\n                        variant=\"body2\" \r\n                        color=\"textSecondary\" \r\n                        component=\"p\"\r\n                    >\r\n                        {props.preview}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.cardAction}>\r\n                    <Button \r\n                        fullWidth \r\n                        variant=\"contained\" \r\n                        color=\"secondary\"\r\n                        onClick={clicked}\r\n                        className={classes.readButton}\r\n                    >\r\n                        Read\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CardLink;\r\n","import React, { useState } from 'react'; \r\n\r\nimport { \r\n    Divider,\r\n    Grid, \r\n    makeStyles,\r\n    Typography, \r\n    CircularProgress, \r\n} from '@material-ui/core'; \r\n\r\nimport { useHistory } from 'react-router';\r\n\r\nimport HeadlineDisplay from './HeadlineDisplay';\r\n\r\nimport CardLink from '../../Generic/CardLink';\r\n\r\nimport {\r\n    dev\r\n} from '../../helper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    content: {\r\n        padding: 0\r\n    },\r\n    divider: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    }\r\n}));\r\n\r\nconst getFrontPageData = async stateSetter => {\r\n    const pageData = await fetch(`${dev ? '/TestData' : '/api'}/FrontPage${dev ? '.json' : ''}`)\r\n        .then(res => res.json())\r\n        .then(data => data.list)\r\n        .catch(e => {\r\n            console.log(`Error getting front page data: ${e}`);\r\n            return [];\r\n        });\r\n    stateSetter({\r\n        hasLoaded: true,\r\n        pageData: pageData\r\n    });\r\n}\r\n\r\nconst Headline = () => {\r\n    const history = useHistory();\r\n    const redirectTo = uri => history.push(`/${uri}`);\r\n    const classes = useStyles();\r\n    const [pageState, setPageState] = useState({\r\n        hasLoaded: false,\r\n        pageData: []\r\n    });\r\n\r\n    const makePageContent = data => {\r\n        if(data.length === 0)\r\n            return (\r\n                <Typography variant=\"h3\">More to come...</Typography>\r\n            );\r\n        else \r\n            return data.map((record, iter) => (\r\n                <CardLink \r\n                    {...record} \r\n                    key={`frontpage-item-${iter}`} \r\n                    redirectTo={redirectTo}\r\n                />\r\n            ));\r\n    }\r\n\r\n    if(!pageState.hasLoaded)\r\n        getFrontPageData(setPageState);\r\n\r\n    let content = pageState.hasLoaded ? makePageContent(pageState.pageData) : (\r\n        <Grid \r\n            item \r\n            container \r\n            xs={12} \r\n            justify=\"center\"\r\n        >\r\n            <CircularProgress color=\"secondary\" />\r\n        </Grid>\r\n    );\r\n\r\n    return (\r\n        <Grid \r\n            item \r\n            container \r\n            className={classes.content} \r\n        >\r\n            <Grid \r\n                item \r\n                container \r\n                xs={12} \r\n            >\r\n                <Grid \r\n                    item \r\n                    lg={1} \r\n                    xs={false} \r\n                />\r\n                <HeadlineDisplay redirectTo={redirectTo} />\r\n                <Grid \r\n                    item \r\n                    lg={1} \r\n                    xs={false} \r\n                />\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={false} \r\n                lg={2} \r\n            />\r\n            <Grid \r\n                container \r\n                item \r\n                xs={12} \r\n                lg={8} \r\n                justify=\"center\" \r\n            >\r\n                <Grid \r\n                    container \r\n                    item \r\n                    xs={12} \r\n                    spacing={1} \r\n                    justify=\"center\" \r\n                    alignItems=\"stretch\" \r\n                >\r\n                    <Grid \r\n                        item \r\n                        xs={12} \r\n                    >\r\n                        <Divider className={classes.divider} />\r\n                    </Grid>\r\n                    {content} \r\n                </Grid>\r\n            </Grid>\r\n            <Grid \r\n                item \r\n                xs={false} \r\n                lg={2} \r\n            />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Headline;\r\n","import Headlines from '../Pages/Headlines/Headlines'; \r\nimport CV from '../Pages/CV/CV'; \r\n\r\nexport const menuOptions = [\r\n    {\r\n        index: 1,\r\n        text: \"Home Page\",\r\n        code: \"home\",\r\n        path: \"/home\",\r\n        component: Headlines\r\n    },\r\n    {\r\n        index: 2,\r\n        text: \"Hardware Embedded\",\r\n        code: \"/hardware-embedded\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 3,\r\n        text: \"Web\",\r\n        code: \"web\",\r\n        path: \"/web\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 4,\r\n        text: \"Rust\",\r\n        code: \"rust\",\r\n        path: \"/rust\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 5,\r\n        text: \"CPU Design\",\r\n        code: \"cpu-design\",\r\n        path: \"/cpu-design\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 6,\r\n        text: \"Nottinghack\",\r\n        code: \"nottinghack\",\r\n        path: \"/nottinghack\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 7,\r\n        text: \"Anvil-Lib\",\r\n        code: \"anvil-lib\",\r\n        path: \"/anvil-lib\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 8,\r\n        text: \"Norenth\",\r\n        code: \"norenth\",\r\n        path: \"/norenth\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 9,\r\n        text: \"Contact\",\r\n        code: \"contact\",\r\n        path: \"/contact\",\r\n        component: () => <></>\r\n    },\r\n    {\r\n        index: 10,\r\n        text: \"CV\",\r\n        code: \"cv\",\r\n        path: \"/cv\",\r\n        component: CV\r\n    },\r\n    {\r\n        index: 11,\r\n        text: \"Posts\",\r\n        code: \"post\",\r\n        path: \"/post/:id\",\r\n        component: () => <></>\r\n    }\r\n];","import React from 'react';\r\n\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nexport const CV = () => {\r\n\r\n    return(\r\n        <>\r\n            <Typography variant=\"h1\">Hello World</Typography>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CV;\r\n","import React from 'react';\r\n\r\nimport {\r\n    Hidden,\r\n    Drawer,\r\n    Toolbar,\r\n    Tabs,\r\n    Tab, \r\n} from '@material-ui/core';\r\nimport {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nimport { menuOptions } from '../Common/menuOptions'; \r\n\r\nimport { topNavHeight } from '../helper.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    optionsBody: {\r\n        height: topNavHeight, \r\n        display: 'flex',\r\n        alignItems: 'flex-end', \r\n    },\r\n    drawerContainer: {\r\n        height: topNavHeight,\r\n        overflow: 'auto',\r\n    },\r\n    dropDown: {\r\n        borderBottom: 0, \r\n    }\r\n}));\r\n\r\nconst NavTop = (props) => {\r\n    const classes = useStyles();\r\n    const { \r\n        changeTab, \r\n        selectedTab,\r\n    } = props;\r\n\r\n    const tabs = menuOptions.map(opt => \r\n        <Tab \r\n            label={opt.text}\r\n            key={`tab-bottom-opt-${opt.code}`} \r\n        />\r\n    );\r\n\r\n    const {\r\n        open,\r\n        anchor\r\n    } = props.open;\r\n\r\n    const openFlag = anchor === 'top' && open;\r\n\r\n    return (\r\n        <Hidden smDown>\r\n            <Drawer \r\n                variant='persistent'\r\n                anchor='top'\r\n                open={openFlag} \r\n                classes={{\r\n                    paper: classes.dropDown\r\n                }}\r\n            >\r\n                <Toolbar />\r\n                <div className={classes.optionsBody}>\r\n                    <Tabs \r\n                        value={selectedTab} \r\n                        onChange={changeTab}\r\n                        variant='scrollable'\r\n                    >\r\n                        <div></div>\r\n                        {tabs}\r\n                    </Tabs>\r\n                </div>\r\n            </Drawer>\r\n        </Hidden> \r\n    )\r\n}\r\n\r\nexport default NavTop;\r\n","\r\nexport const dev = true;\r\nexport const topNavHeight = 50;\r\n\r\nconst ex = {\r\n    dev,\r\n    topNavHeight,\r\n};\r\n\r\nexport default ex;\r\n","import React from 'react';\r\n\r\nimport {\r\n    Drawer, \r\n    Tabs,\r\n    Tab,\r\n    FormControlLabel, \r\n    Switch, \r\n    Divider, \r\n} from '@material-ui/core';\r\nimport {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nimport { menuOptions } from '../Common/menuOptions'; \r\n\r\nimport Footer from './Footer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    optionsFlexContainer: {\r\n        alignItems: 'stretch'\r\n    },\r\n    option: {\r\n        maxWidth: 'none'\r\n    }, \r\n    darkModeButton: {\r\n        justifyContent: 'center',\r\n        margin: '8px',\r\n    },\r\n    divider: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    }\r\n}));\r\n\r\nconst NavBottom = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { \r\n        toggleDraw, \r\n        changeTab, \r\n        selectedTab,\r\n        setDarkmode, \r\n        darkMode, \r\n    } = props;\r\n\r\n    const {\r\n        open,\r\n        anchor\r\n    } = props.open;\r\n\r\n    const tabs = menuOptions.map(opt => \r\n        <Tab \r\n            className={classes.option} \r\n            label={opt.text} \r\n            key={`tab-bottom-opt-${opt.code}`} \r\n        />\r\n    );\r\n\r\n    const openFlag = anchor === 'bottom' && open;\r\n\r\n    return (\r\n        <Drawer \r\n            anchor='bottom' \r\n            open={openFlag} \r\n            onClose={() => props.toggleDraw('bottom')} \r\n        > \r\n            <Footer toggleDraw={toggleDraw} />\r\n            <Tabs \r\n                orientation='vertical' \r\n                variant='scrollable' \r\n                value={selectedTab} \r\n                onChange={changeTab} \r\n                classes={{ \r\n                    flexContainerVertical: classes.optionsFlexContainer \r\n                }} \r\n            > \r\n                <div />\r\n                {tabs}\r\n            </Tabs>\r\n            <Divider className={classes.divider} />\r\n            <FormControlLabel\r\n                className={classes.darkModeButton}\r\n                value={darkMode}\r\n                control={\r\n                    <Switch \r\n                        color=\"secondary\" \r\n                        size=\"small\" \r\n                        onChange={event => setDarkmode(!darkMode)}\r\n                        checked={darkMode}\r\n                    />\r\n                }\r\n                label=\"Dark Mode\"\r\n                labelPlacement=\"start\"\r\n            />\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default NavBottom;\r\n","import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nimport { Route } from 'react-router-dom'; \r\n\r\nimport { menuOptions } from '../Common/menuOptions';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    content: {\r\n        height: '100%'\r\n    },\r\n}))\r\n\r\nexport const Pages = () => {\r\n    const classes = useStyles();\r\n\r\n    let options = [...menuOptions];\r\n    options.sort((firstElem, secondElem) => firstElem.index - secondElem.index);\r\n\r\n    console.log(options);\r\n\r\n    let routes = options.map(opt =>\r\n        <Route \r\n            path={`/${opt.code}`}\r\n            component={opt.component}\r\n            key={`page-route=${opt.code}`}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <Grid container className={classes.content}>\r\n            {routes}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Pages;\r\n//","import React, { useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {\r\n    makeStyles, \r\n    useTheme, \r\n} from '@material-ui/core/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { menuOptions } from './Common/menuOptions';\r\n\r\nimport { topNavHeight } from './helper.js';\r\nimport NavTop from './Components/NavTop';\r\nimport NavBottom from './Components/NavBottom';\r\nimport Pages from './Pages/Pages'; \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        minHeight: `calc(100vh - ${2 * theme.mixins.toolbar.minHeight}px)`,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        marginTop: 0\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: topNavHeight,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Content = props => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSM = window.innerWidth < theme.breakpoints.values.md;    \r\n    const history = useHistory();\r\n    const redirectTo = uri => history.push(`/${uri}`);\r\n    \r\n    const { \r\n        drawOpen, \r\n        toggleDraw,\r\n        setDarkmode, \r\n        darkMode, \r\n    } = props;\r\n    const drawerShift = (drawOpen.open && drawOpen.anchor === 'top');\r\n    \r\n    // The index of the tab as it appears in the list, to the tab name URI\r\n    const indexToTabName = index => {\r\n        for(let option in menuOptions) {\r\n            let value = menuOptions[option];\r\n            if(value.index === index)\r\n                return value.code;\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const tabNameToIndex = tabName => {\r\n        for(let option in menuOptions) {\r\n            let value = menuOptions[option];\r\n            if(tabName.startsWith(value.code))\r\n                return value.index;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    // Store the currently selected tab\r\n    const [selectedTab, setSelectedTab] = useState(1);\r\n    const changeTab = (_event, tabNo) => { \r\n        redirectTo(indexToTabName(tabNo));\r\n        setSelectedTab(tabNo); \r\n    };\r\n\r\n    // The URI will take precedence over the actual selected tab \r\n    let location = window.location.pathname.substring(1);\r\n    let tabName = indexToTabName(selectedTab);\r\n    if(!location.startsWith(tabName) && tabName)\r\n        setSelectedTab(tabNameToIndex(location));\r\n\r\n    // The height of the header/footer changes depending on the screen size/orientation\r\n    // as defined in the theme, we need to account for that in the min size for the main content  \r\n    const minWidth0Landscape = useMediaQuery('@media (min-width:0px) and (orientation: landscape)');\r\n    const minWidth600 = useMediaQuery('@media (min-width:600px)');\r\n\r\n    let toolBarHeight = 0;\r\n    if(minWidth0Landscape && !minWidth600)\r\n        toolBarHeight = theme.mixins.toolbar['@media (min-width:0px) and (orientation: landscape)'].minHeight;\r\n    else if(minWidth600)\r\n        toolBarHeight = theme.mixins.toolbar['@media (min-width:600px)'].minHeight;\r\n    else \r\n        toolBarHeight = theme.mixins.toolbar.minHeight;\r\n    // If we are on a small screen, then there will also be a footer \r\n    toolBarHeight = isSM ? toolBarHeight * 2 : toolBarHeight;\r\n    // We also need to take into account the top menu when it's open \r\n    toolBarHeight = drawerShift ? toolBarHeight + topNavHeight : toolBarHeight;\r\n\r\n    return (\r\n        <>\r\n            <NavTop\r\n                open={drawOpen}\r\n                selectedTab={selectedTab} \r\n                changeTab={changeTab}\r\n            />\r\n            <main\r\n                className={clsx(classes.content, { \r\n                    [classes.contentShift]: drawerShift \r\n                })} \r\n                style={{\r\n                    minHeight: `calc(100vh - ${toolBarHeight}px)`\r\n                }}\r\n            >\r\n                <Pages />\r\n            </main>\r\n            <NavBottom\r\n                open={drawOpen} \r\n                toggleDraw={toggleDraw} \r\n                selectedTab={selectedTab} \r\n                changeTab={changeTab}\r\n                setDarkmode={setDarkmode}\r\n                darkMode={darkMode}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","import {\r\n    createMuiTheme\r\n} from '@material-ui/core';\r\n\r\nimport { \r\n    blueGrey,\r\n    teal, \r\n} from '@material-ui/core/colors'; \r\n\r\nexport const getTheme = mode => {\r\n    let darkMode = mode;\r\n    if(!darkMode)\r\n        darkMode = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ?\r\n            \"dark\" : \"light\";\r\n    return createMuiTheme({\r\n        palette: {\r\n            type: darkMode,\r\n            primary: blueGrey,\r\n            secondary: teal\r\n        }\r\n    });\r\n}\r\n\r\nexport const exp = {\r\n    getTheme,\r\n};\r\n\r\nexport default exp; \r\n","import React, { useState } from 'react';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles'; \r\nimport { ThemeProvider } from '@material-ui/core';\r\n\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport Content from './Content';\r\n\r\nimport { getTheme } from './Theme';\r\n\r\nconst App = props => {\r\n    // Check to see if this is on a small scrren or below\r\n    // used when deciding where to mount the menu \r\n    const theme = useTheme();\r\n    const isSM = window.innerWidth < theme.breakpoints.values.md;\r\n\r\n    const defaultDarkMode = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\r\n    // Get a theme object, store it locally with the browser default dark mode\r\n    const [themeData, setThemeData] = useState({\r\n        darkMode: defaultDarkMode,\r\n        theme: getTheme(defaultDarkMode ? 'dark' : 'light')\r\n    });\r\n    // Allows us to toggle between dark and light mode at will  \r\n    const setDarkmode = onOff => \r\n        setThemeData({\r\n            darkMode: onOff,\r\n            theme: getTheme(onOff ? 'dark' : 'light')\r\n        });\r\n\r\n    // The menu is open by default on large screens\r\n    const [drawOpen, changeDraw] = useState({\r\n        open:  !isSM, \r\n        anchor: isSM ? 'bottom' : 'top', \r\n    });\r\n\r\n    // Toggles the drawer, accepts where it should be mounted to\r\n    // (in case a user switches between portrait 'bottom' and landscape 'top')\r\n    const toggleDraw = (anchor) => \r\n        changeDraw({anchor: anchor, open: !drawOpen.open});\r\n\r\n    return (\r\n        <ThemeProvider theme={themeData.theme}>\r\n            <CssBaseline />\r\n            <Header \r\n                toggleDraw={toggleDraw}\r\n                setDarkmode={setDarkmode}\r\n                darkMode={themeData.darkMode}\r\n            />\r\n            <Content \r\n                drawOpen={drawOpen}\r\n                toggleDraw={toggleDraw}\r\n                setDarkmode={setDarkmode}\r\n                darkMode={themeData.darkMode}\r\n            />\r\n            <Footer \r\n                toggleDraw={toggleDraw} \r\n            />\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'; \r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport {\r\n    BrowserRouter,\r\n    Route,\r\n    Redirect, \r\n} from 'react-router-dom'; \r\n\r\nimport App from './App';\r\n\r\nconst Main = () =>  {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Redirect \r\n                exact \r\n                from=\"/\" \r\n                to=\"/home\" \r\n            />\r\n            <Route \r\n                exact \r\n                path=\"/:page?/:postId?\" \r\n                render={props => \r\n                    <App \r\n                        {...props}\r\n                    />\r\n                }\r\n            />\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}